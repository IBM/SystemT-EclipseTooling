<?xml version="1.0" encoding="UTF-8" ?>
<typeSystemDescription>
	<name>dlt_extension_typesystem</name>
	<description>
		LanguageWare extneded TypeSystem. provides annotation types for MWUs and RegEx
		matched tokens
		(e.g. URLs, Addresses, ... etc.). It also has some features not utilized
		frequently.
	</description>
	<version>7.2.0.2</version>
	<vendor>IBM Corporation</vendor>
	<imports>
		<import location="tt_core_typesystem.xml" />
	</imports>
	<types>
		<typeDescription>
			<name>com.ibm.dlt.uimatypes.MWU</name>
			<description>
				com.ibm.dlt.uimatypes.MWU is the type which is described above, used at present
				by LanguageWare to annotate Multi Word Units, e.g. if you have a
				domain terms dictionary of this format then you will get recall
				on all variants of the MWU
			</description>
			<supertypeName>uima.tt.TokenLikeAnnotation</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>uima.tt.Synonym</name>
			<description />
			<supertypeName>uima.tt.KeyStringEntry</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>uima.tt.TokenLikeAnnotation</name>
			<description></description>
			<supertypeName>uima.tt.LexicalAnnotation</supertypeName>
			<features>
				<featureDescription>
					<name>synonymEntries</name>
					<description />
					<rangeTypeName>uima.cas.FSList</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>dictionaryMatch</name>
					<description>Tells if the token is matched in at least one of the
						dictionaries</description>
					<rangeTypeName>uima.cas.Boolean</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>frost_TokenType</name>
					<description>Numeric type of token (abr. num. compound etc.)</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>inflectedForms</name>
					<description />
					<rangeTypeName>uima.cas.StringList</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>spellAid</name>
					<description />
					<rangeTypeName>uima.cas.StringList</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>decomposition</name>
					<description>
						A set of internal analyses, typically token sequences
						which represent possible routes through the compound.
						This is created only when Config param CreateDecompStructure=true.
						Currently not supported.
					</description>
					<rangeTypeName>uima.cas.FSList</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>

		<typeDescription>
			<name>uima.tt.Lemma</name>
			<description></description>
			<supertypeName>uima.tt.KeyStringEntry</supertypeName>
			<features>
				<featureDescription>
					<name>frost_Constraints</name>
					<description>constraints flags</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>frost_MorphBitMasks</name>
					<description>Morphological bit mask array</description>
					<rangeTypeName>uima.cas.IntegerArray</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>frost_ExtendedPOS</name>
					<description>
						extended part of speech information
						(JPOS for Japanese, CPOS for Chinese)
					</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>frost_JKom</name>
					<description>Japanese Morphology data (JKom for Japanese)</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>frost_JPStart</name>
					<description>Japanese data (JPStart for Japanese)</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>morphID</name>
					<description>Internal lemma property, not documented.</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>


		<typeDescription>
			<name>com.ibm.dlt.uimatypes.Decomp_Analysis</name>
			<description>
				A single route or analysis within a compound
				Decomp_Analysis is the full structured analysis of a compound
				it is mutually exclusive with CompPartAnnotation. That is to
				say that they should not be used together
				NB!: Currently unsupported!
			</description>
			<supertypeName>uima.cas.TOP</supertypeName>
			<features>
				<featureDescription>
					<name>headComponentIndex</name>
					<description>
						the index of the component in this analysis
						which represents the "head"
					</description>
					<rangeTypeName>uima.cas.Integer</rangeTypeName>
				</featureDescription>
				<featureDescription>
					<name>route</name>
					<description>a list of tokens representing a single decomp route</description>
					<rangeTypeName>uima.cas.FSList</rangeTypeName>
				</featureDescription>
			</features>
		</typeDescription>


		<!-- Token Types -->
		<typeDescription>
			<name>com.ibm.langware.uimatypes.WordLikeToken</name>
			<description></description>
			<supertypeName>uima.tt.TokenAnnotation</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Alphabetic</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.WordLikeToken</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.UppercaseAlphabetic</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Alphabetic</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.TitlecaseAlphabetic</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Alphabetic</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.LowercaseAlphabetic</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Alphabetic</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Arabic</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Alphabetic</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Hebrew</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Alphabetic</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Syllabic</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.WordLikeToken</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Hiragana</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Syllabic</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Katakana</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Syllabic</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Hangul</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Syllabic</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Ideographic</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.WordLikeToken</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Han</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Ideographic</supertypeName>
		</typeDescription>

		<!-- Disabled until needed <typeDescription> <name>com.ibm.langware.uimatypes.Devanagari</name> 
			<description></description> <supertypeName>com.ibm.langware.uimatypes.WordLikeToken</supertypeName> 
			</typeDescription> -->

		<!-- Disabled until needed <typeDescription> <name>com.ibm.langware.uimatypes.Thai</name> 
			<description></description> <supertypeName>com.ibm.langware.uimatypes.WordLikeToken</supertypeName> 
			</typeDescription> -->

		<!-- Disabled until needed <typeDescription> <name>com.ibm.langware.uimatypes.Lao</name> 
			<description></description> <supertypeName>com.ibm.langware.uimatypes.WordLikeToken</supertypeName> 
			</typeDescription> -->

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Numeric</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.WordLikeToken</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.ChineseNumeral</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Numeric</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.Punctuation</name>
			<description></description>
			<supertypeName>uima.tt.TokenAnnotation</supertypeName>
		</typeDescription>

		<typeDescription>
			<name>com.ibm.langware.uimatypes.ClauseEndingPunctuation</name>
			<description></description>
			<supertypeName>com.ibm.langware.uimatypes.Punctuation</supertypeName>
		</typeDescription>

	</types>
</typeSystemDescription>

