#-------------------------------------------------------------
# Copyright IBM
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------


Aligner_ALLIGNMENT_TXT=\nNeedleman-Wunsch-Alignment:\n\t\t\t\t
Aligner_INVERT_PATH_LABEL=Invert path: 

ChangeCharClassDialog_ALPHANUMERIC=Alpha-numeric
ChangeCharClassDialog_ANY_CHAR=Any Character
ChangeCharClassDialog_DIGIT=Digit
ChangeCharClassDialog_FONT_SANS_SERIF=sans serif
ChangeCharClassDialog_LABEL_CHANGE_CHAR_CLASS=Change character class
ChangeCharClassDialog_LABEL_CHOOSE_CHAR_CLASS=Choose one of the character classes
ChangeCharClassDialog_LETTER=Letter
ChangeCharClassDialog_LOWERCASE=Lower-case
ChangeCharClassDialog_NON_ALPHANUMERIC=Non-alpha-numeric
ChangeCharClassDialog_OTHER=Other
ChangeCharClassDialog_UPPERCASE=Upper-case
ChangeCharClassDialog_WHITESPACE=Whitespace

CharacterHierarchy_ANY_CHAR=Any Characters
CharacterHierarchy_ANY_DIGITS=any digits
CharacterHierarchy_ANY_SYMBOLS=any symbols
CharacterHierarchy_DIGIT_AND_WORD_CHAR=all digits and word \n characters
CharacterHierarchy_DIGITS=Digits
CharacterHierarchy_LETTERS=Letters
CharacterHierarchy_LOWERCASE_LETTERS=lower case letters
CharacterHierarchy_LOWERCASE_LETTERS2=Lower-case Letters
CharacterHierarchy_NON_ALPHA_NUM_CHAR=Non-alpha-numeric \n characters
CharacterHierarchy_NON_ALPHA_NUM_CHAR_MSG=everything that is neither a \n digit nor a word character
CharacterHierarchy_NON_ALPHANUMERIC_MSG=everything that is neither a \n word character, a digit nor a whitespace character \n
CharacterHierarchy_OTHER_CHAR_MSG=Other Characters
CharacterHierarchy_UPPER_OR_LOWER_CHAR=upper or lower case \n letters
CharacterHierarchy_UPPERCASE_LETTERS=upper case letters
CharacterHierarchy_UPPERCASE_LETTERS2=Upper-case Letters
CharacterHierarchy_WHITESPACE_CHAR=whitespace characters
CharacterHierarchy_WHITESPACE_CHAR_CAPS=Whitespace Characters
CharacterHierarchy_ALPHANUMERIC_CHAR=Alpha-numeric Characters

ExprBuilderWizard_REGEX_BUILDER=Regular Expression Builder
ExprBuilderWizardPage_CONSTRUCT_DESCRIPTION=Select a construct to add it to the current regular expression rule.
ExprBuilderWizardPage_RULE_DESCRIPTION=Specify a regular expression rule.
ExprBuilderWizardPage_WIZARD_DESCRIPTION=Create a rule by selecting constructs and combining them. You can also specify a regular expression by typing into the text box. When you are done, enter text to test your rule.
ExprBuilderWizardPage_WIZARD_IMG=rules_eb_wizard_big.gif
ExprBuilderWizard_INFO_COPY_CLIPBOARD=The following regular expression has been copied to the clipboard, paste the contents into an AQL script.
ExprBuilderWizard_VALIDATION_ERROR=The following regular expression contains syntax errors!

Expression_FAILED=\ failed.

MatchStrategyType_MATCH_ALL=matchAll
MatchStrategyType_MATCH_COMPLETE=matchComplete
MatchStrategyType_MATCH_FIRST=matchFirst

RegexBuilderWizardCommand_BAD_LOCATION_EXCEPTION_MSG=The Regular Expression Builder was started at a bad location.
RegexBuilderWizardCommand_CURSOR_ERROR=Place the cursor inside a regular expression to open the Regular Expression Builder.
RegexBuilderWizardCommand_REGEX_OPEN_ERROR=There was an error opening the Regular Expression Builder.
RegexBuilderWizardCommand_REGEX_OPEN_EXCEPTION=An exception was thrown when starting the Regular Expression Builder.

RegexHandlerUtil_REGEX_CMD_ERROR=There was an error executing the regex command.

RegexLearnerWizard_CHANGES_ERROR=The changes cannot be applied.
RegexLearnerWizard_CHANGES_ERROR_INCONSISTANT=The last changes cannot be applied because the input data is not consistent.\n
RegexLearnerWizard_REGEX_GEN_ERROR=The alternation samples table was empty or the digit range you specified was inconsistent with respect to the minimum <= maximum.
RegexLearnerWizard_REGEX_GEN_PAGE1=RegexLearner Page1
RegexLearnerWizard_REGEX_GEN_PAGE2=RegexLearner Page2
RegexLearnerWizard_REGEX_GENERATOR=Regular Expression Generator
RegexLearnerWizardCommand_BAD_LOCATION_EXCEPTION_MSG=The Regular Expression Generator was started at a bad location.
RegexLearnerWizardCommand_CURSOR_ERROR=Place the cursor inside a regular expression to open the Regular Expression Generator.
RegexLearnerWizardCommand_REGEX_OPEN_ERROR=An error occurred when the Regular Expression Generator was opened.
RegexLearnerWizardController1_ALL_FILES=All Files (*)
RegexLearnerWizardController1_ERROR_CANNOT_OPENFILE=The system cannot open the file. 
RegexLearnerWizardController1_ERROR_FILENOTFOUND=The system cannot find the file.
RegexLearnerWizardController1_ERROR_READ_FILE=Error reading file 
RegexLearnerWizardController1_ERROR_READFILE=Error - Reading file
RegexLearnerWizardController1_INFO_SUGGEST_REGEX=Enter a list of samples before you click on Suggest regular expressions.
RegexLearnerWizardController1_NO_SAMPLES=No samples
RegexLearnerWizardController1_NO_SAMPLES_IN_TABLE=No samples in table
RegexLearnerWizardController1_TEXT_FILES=Text Files
RegexLearnerWizardController2_ALL_FILES=All Files (*)
RegexLearnerWizardController2_CHAR_CLASS_COMPRISES=This character class comprises 
RegexLearnerWizardController2_CROSS_ICON=/icons/cross.gif
RegexLearnerWizardController2_ERROR_CANNOT_OPEN_FILE=The system cannot open the file. 
RegexLearnerWizardController2_ERROR_FILENOTFOUND=The system cannot find the file.
RegexLearnerWizardController2_ERROR_INCONSISTANT_RANGE=No range was specified or an inconsistent range was specified.
RegexLearnerWizardController2_ERROR_NO_SAMPLES=No samples
RegexLearnerWizardController2_ERROR_NO_SAMPLES_IN_TABLE=No samples in table
RegexLearnerWizardController2_ERROR_READ_FILE=Error reading file 
RegexLearnerWizardController2_ERROR_READFILE=Error - Reading file
RegexLearnerWizardController2_INFO_ENTER_MINMAX_FOR_INT=Enter a minimum and a maximum for the integer number range.
RegexLearnerWizardController2_INFO_ENTER_SUBEXP=Enter a list of subexpression samples before you click on Update, or choose another type option.
RegexLearnerWizardController2_TEXT_FILES=Text Files
RegexLearnerWizardController2_TICK_ICON=/icons/tick.gif
RegexLearnerWizardView1_ERROR=error
RegexLearnerWizardView1_FONT_SANS_SERIF=sans serif
RegexLearnerWizardView1_GENERATED_REGEX_DESC=Each of the regular expressions below matches all strings of the sample set. Select one and click Next to refine it.
RegexLearnerWizardView1_INFO_DIVIDE_SAMPLES=Try to divide the samples into multiple groups (group by similarity).\n
RegexLearnerWizardView1_INFO_NO_REGEX=No regular expression could be generated.\n
RegexLearnerWizardView1_INFO_NO_REGEX_FOR_CONCEPT=There might not be a regular language for your concept.
RegexLearnerWizardView1_INFO_NO_REGEX_LEARNED=No regular expressions learned so far.
RegexLearnerWizardView1_LABEL_GENERAL_REGEX=General regular expressions
RegexLearnerWizardView1_LABEL_GENERATE_REGEX=Generate regular expression
RegexLearnerWizardView1_LABEL_LOAD_SAMPLES=Load samples from file
RegexLearnerWizardView1_LABEL_SAMPLES=Samples
RegexLearnerWizardView1_LABEL_SPECIFIC_REGEX=Specific regular expressions
RegexLearnerWizardView1_REG_EXPRESSION=Regular Expressions
RegexLearnerWizardView1_REGEX=Regex
RegexLearnerWizardView1_REGEX_GEN_WIZARD_DESC=Begin by directly adding samples to the table or loading them from a file. Click on the Generate regular expression button. Once the expressions are generated,\nyou can adjust them in terms of specificity and select the most promising to continue refining it.
RegexLearnerWizardView1_REGEX_GEN_WIZARD_IMAGE=rules_eb_wizard_big.gif
RegexLearnerWizardView1_REGEX_GENERATOR=Regular Expression Generator
RegexLearnerWizardView1_REGEX_SLIDER=Slide left for specific regular expressions and slide right for general regular expressions

RegexLearnerWizardView2_37=Allow leading zeros
RegexLearnerWizardView2_APPLY=\ Apply 
RegexLearnerWizardView2_BUTTON_BACK=<< Back
RegexLearnerWizardView2_BUTTON_NEXT=Next >>
RegexLearnerWizardView2_CHANGE=Change
RegexLearnerWizardView2_HINT_IMAGE=info_obj.gif
RegexLearnerWizardView2_IMPORT=Import...
RegexLearnerWizardView2_INFO_PART_OCCURS_IN_SAMPLES=This part occurs in some of the Samples, but not in all of them.
RegexLearnerWizardView2_INFO_TYPE_TO_TEST_REGEX=Type some text to test your regular expression.
RegexLearnerWizardView2_LABEL_ALTER_SAMPLES=Alternation of the following Samples:
RegexLearnerWizardView2_LABEL_ANY_SYMBOL_CHAR_CLASS=Any of the symbols in this character class:
RegexLearnerWizardView2_LABEL_CHAR_CLASS=Character Class: 
RegexLearnerWizardView2_LABEL_INT_IN_RANGE=An integer number within a certain range:
RegexLearnerWizardView2_LABEL_MAX=Maximum (of the number range): 
RegexLearnerWizardView2_LABEL_MIN=Minimum (of the number range): 
RegexLearnerWizardView2_LABEL_REFINE_CURR_SUBEXP=Refine the current subexpression:
RegexLearnerWizardView2_LABEL_REFINE_NEXT_SUBEXP=Refine the next subexpression
RegexLearnerWizardView2_LABEL_REFINE_PREV_SUBEXP=Refine the previous subexpression
RegexLearnerWizardView2_LABEL_REGEX=Regular Expression:
RegexLearnerWizardView2_LABEL_SAMPLE_OF_SUBEXP=Samples of this subexpression
RegexLearnerWizardView2_LABEL_SUBEXP=Subexpression:
RegexLearnerWizardView2_LABEL_SUBEXP_OPTIONAL=This subexpression is optional.
RegexLearnerWizardView2_LABEL_TABLE_DESC=Click at a row of\nthis table to add\nor remove samples.
RegexLearnerWizardView2_MATCH=Match
RegexLearnerWizardView2_REGEX_GEN_WIZARD_IMAGE=rules_eb_wizard_big.gif
RegexLearnerWizardView2_REGEX_GENERATOR=Regular Expression Generator
RegexLearnerWizardView2_SAMPLES=Samples
RegexLearnerWizardView2_SUBEXP_CONTAINS_ATLEAST=This subexpression contains at least 
RegexLearnerWizardView2_SUBEXP_CONTAINS_ATMOST=This subexpression contains at most 
RegexLearnerWizardView2_WIZARD_DESC=Refine the regular expression by entering detailed information for each subexpression. The subexpression you are currently working on is highlighted.
RegexLearnerWizardView2_CHANGE_BUTTON_MESSAGE=Selected character class is {0}. Change character class

RegexSuggester_CONCEPT_SIMILAR_SERIALNO_OPTION=Try this regular expression if the concept does not have many optional parts.
RegexSuggester_CONCEPT_SIMILAR_SERIALNO_OPTIONALPARTS_OPTION=Try this regular expression if the concept has many optional parts.
RegexSuggester_STRING_OCCUR_IN_SAMPLES_OPTION=Try this regular expression if certain strings occur in many of your samples.

RegExConstructs_ATLEAST_N_DESC=Match at least n times
RegExConstructs_ATLEAST_N_NOT_MORE_THAN_M_DESC=X, at least n but not more than m times
RegExConstructs_ATLEAST_N_TIMES_DESC=X, at least n times
RegExConstructs_BACKSLASH_DESC=The backslash character
RegExConstructs_BEGIN_LINE_DESC=The beginning of a line
RegExConstructs_BOUNDARY_MATCHES=Boundary Matchers
RegExConstructs_CARRIAGE_RETURN_DESC=The carriage-return character
RegExConstructs_CASEINSENSITIVE_MODE_DESC=By default, case-insensitive matching assumes that only characters in the US-ASCII charset are matched. You can enable Unicode-aware case-insensitive matching by setting the Unix lines mode in conjunction with this flag. If you specify this flag, the performance might be decreased.
RegExConstructs_CASEINSENSITIVE_MODE_TITLE=Enables case-insensitive matching.
RegExConstructs_CHAR_END_RANGE_DESC=Enter a character to end with
RegExConstructs_CHAR_START_RANGE_DESC=Enter a character to start with
RegExConstructs_CHARACTER_CLASSES=Character classes
RegExConstructs_CHARACTERS=Characters
RegExConstructs_COMMENTS_DESC=In this mode, whitespace is ignored, and embedded comments starting with \# are ignored until the end of a line.
RegExConstructs_COMMENTS_TITLE=Permits whitespace and comments in pattern.
RegExConstructs_DIGIT=A digit: [0-9]
RegExConstructs_DOTALL_DESC=In dotall mode, the expression '.' matches any character, including a line terminator. By default, this expression does not match line terminators.
RegExConstructs_DOTALL_TITLE=Enables dotall mode.
RegExConstructs_END_LINE_DESC=The end of a line
RegExConstructs_ENTER_X=Enter a value for X
RegExConstructs_ENTER_Y=Enter a value for Y
RegExConstructs_ESCAPE_DESC=The escape character
RegExConstructs_EXACTLY_N_DESC=Match exactly n times
RegExConstructs_EXACTLY_N_TIMES_DESC=X, exactly n times
RegExConstructs_GREEDY_QUALIFIERS=Greedy quantifiers
RegExConstructs_LOGICAL_OPERATORS=Logical operators
RegExConstructs_MATCH_CHAR_EXCEPT_NEWLINE=Matches any character except the newline character(\\n)
RegExConstructs_MATCH_CLASS=[abc]
RegExConstructs_MATCH_CLASS_CHAR=Match a class of characters
RegExConstructs_MATCH_CLASS_CHAR_DESC=Type the characters that you want to include in the class
RegExConstructs_MATCH_CLASS_DESC=[abc]: a, b, or c (simple class)
RegExConstructs_MATCH_CLASS_RULE=\\[(\\w)+\\]
RegExConstructs_MATCH_FLAGS=Match Flags
RegExConstructs_MATCH_N_NOT_MORETHAN_M_LABEL=Match at least n but not more than m times
RegExConstructs_MATCH_RANGE=[a-z]
RegExConstructs_MATCH_RANGE_CHAR=Match a range of characters
RegExConstructs_MATCH_RANGE_DESC=[a-z]: a through z, inclusive (range)
RegExConstructs_MATCH_RANGE_RULE=\\[((\\w-\\w)|\\w)+\\]
RegExConstructs_MATCH_X_FOLLOWED_Y=Match X followed by Y
RegExConstructs_MATCH_X_OR_Y=Match either X or Y
RegExConstructs_MAX_MATCHES_LABEL=Specify the maximum number of matches to be found 
RegExConstructs_MIN_MATCHES_LABEL=Specify the minimum number of matches 
RegExConstructs_MIN_MAX_MATCHES_LABEL=Specify the minimum number and the maximum number of matches to be found
RegExConstructs_MIN_NUMBER_MATCHES_LABEL=Specify the minimum number of matches to be found 
RegExConstructs_MULTILINE_DESC=In multiline mode the expressions ^ and $ match just after or just before, respectively, a line terminator or the end of the input sequence. By default, these expressions only match at the beginning and at the end of the entire input sequence.
RegExConstructs_MULTILINE_TITLE=Enables multiline mode.
RegExConstructs_NEGATE_CLASS=[^abc]
RegExConstructs_NEGATE_CLASS_CHAR=Negate a class of characters
RegExConstructs_NEGATE_CLASS_CHAR_DESC=Type the characters that you want to negate
RegExConstructs_NEGATE_CLASS_DESC=[^abc]: Any character except a, b, or c (negation)
RegExConstructs_NEGATE_CLASS_RULE=\\[\\^(\\w)+\\]
RegExConstructs_NEWLINE_DESC=The newline (line feed) character
RegExConstructs_NON_DIGIT=A non-digit: [^0-9]
RegExConstructs_NON_WHITESPACE_DESC=A non-whitespace character: [^\\s]
RegExConstructs_NON_WORD_BOUNDARY_DESC=A non-word boundary
RegExConstructs_NON_WORD_CHAR_DESC=A non-word character: [^\\w]
RegExConstructs_NUMBER_MATCHES_LABEL=Specify the number of matches to be found
RegExConstructs_ONCEORNOT_DESC=X, once or not at all
RegExConstructs_ONEORMORE_DESC=X, one or more times
RegExConstructs_PREDEFINED_CHAR_CLASSES=Predefined character classes
RegExConstructs_SPACE_DESC=The space character
RegExConstructs_TAB_DESC=The tab character
RegExConstructs_UNICODE_AWARE_DESC=If you specify this flag, then case-insensitive matching, when enabled by the CASE_INSENSITIVE flag, is done in a manner consistent with the Unicode Standard. By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. If you specify this flag, the performance might increase.
RegExConstructs_UNICODE_AWARE_TITLE=Enables Unicode-aware case sensitivity.
RegExConstructs_UNIX_LINESMODE_DESC=In this mode, only the '\\n' line terminator is recognized in the behavior of ., ^, and $.
RegExConstructs_UNIX_LINESMODE_TITLE=Enables Unix lines mode.
RegExConstructs_WHITESPACE_DESC=A whitespace character: [\\t\\n\\x0B\\f\\r], any one of space, tab, newline, return, or newpage character
RegExConstructs_WORD_BOUNDARY_DESC=A word boundary
RegExConstructs_WORD_CHAR_DESC=A word character: [a-zA-Z_0-9], any alpha, numeric character
RegExConstructs_ZEROORMORE_DESC=X, zero or more times

RegExConstructs_SPACE = space
RegExConstructs_COMMA = {n comma}
RegExConstructs_DOT = dot
RegExConstructs_QUESTION_MARK = question mark
RegExConstructs_OPTION = option {0} of {1}, {2} {3}
RegExConstructs_SUBEXP_OPTION = subexpression option {0} of {1}, {2}

RIGALearner_EXPRESSION_OF_LEARNER=\n***EXPRESSIONS OF THE LEARNER:***

RuleTestComposite_MATCH_LABEL=Matched:
RuleTestComposite_NO_MATCH_FOUND=No match is found.
RuleTestComposite_REGEX_ERROR_MSG=Regular expression syntax error\!
RuleTestComposite_START_TITLE=Start
RuleTestComposite_STOP_TITLE=Stop
RuleTestComposite_SUBPATTERN_TITLE=Sub-pattern
RuleTestComposite_TEST_RULE_BUTTON=Test Rule
RuleTestComposite_TEXT_TITLE=Text
RuleTestComposite_TEXTAREA_LABEL=Type the text that you want to use to test the rule:
RuleTestComposite_TYPE_TEXT_MSG=Type the input text.
RuleTextComposite_HIGHLIGHT_REGEX_MSG=Highlight regular expression constructs
RuleTextComposite_REDO_TEXT=Redo\tCTRL+Y
RuleTextComposite_UNDO_TEXT=Undo\tCTRL+Z
RuleTextComposite_UNSUPPORTED_OP_EXCEPTION=eventType must either INSERTIONEVENT or REPLACINGEVENT

StyledTextUtils_COPY=Copy\tCTRL+C
StyledTextUtils_CUT=Cut\tCTRL+X
StyledTextUtils_DELETE=Delete\tDEL
StyledTextUtils_PASTE=Paste\tCTRL+V
StyledTextUtils_SELECT_ALL=Select All\tCTRL+A

TabbedRegexLibraryControl_CONSTRUCT=Construct
TabbedRegexLibraryControl_MATCHES=Matches
TabbedRegexLibraryControl_TAB_REGEX_LIB_CNTRL=TabbedRegexLibraryControl
TabbedRegexLibraryControl_NUMERIC_CHECK_MSG=Only numeric values allowed!
